-- Lead Hub

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local lp = Players.LocalPlayer

-- Rayfield
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "Lead Hub",
    LoadingTitle = "Lead Hub",
    LoadingSubtitle = "by Triplex",
    ConfigurationSaving = {Enabled = true, FolderName = "LeadHub", FileName = "Settings"},
    Discord = {Enabled = false},
    KeySystem = false
})

-- Tabs
local CombatTab = Window:CreateTab("Combat", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)

-- Audio Block IDs
local autoBlockTriggerSounds = {
    ["102228729296384"] = true, ["140242176732868"] = true, ["112809109188560"] = true,
    ["136323728355613"] = true, ["115026634746636"] = true, ["84116622032112"] = true,
    ["108907358619313"] = true, ["127793641088496"] = true, ["86174610237192"] = true,
    ["95079963655241"] = true, ["101199185291628"] = true, ["119942598489800"] = true,
    ["84307400688050"] = true
}

-- State
local autoBlockOn = true
local autoPunchOn = true
local infiniteStamina = true
local detectionRange = 10 -- 10 studs default

-- Infinite Stamina
local function enableInfiniteStamina()
    local success, StaminaModule = pcall(function()
        return require(ReplicatedStorage.Systems.Character.Game.Sprinting)
    end)
    if not success or not StaminaModule then return end
    StaminaModule.StaminaLossDisabled = true
    task.spawn(function()
        while infiniteStamina do
            task.wait(0.1)
            StaminaModule.Stamina = StaminaModule.MaxStamina
            if StaminaModule.StaminaChanged then
                pcall(function() StaminaModule.StaminaChanged:Fire() end)
            end
        end
    end)
end
enableInfiniteStamina()

-- UI Toggles
CombatTab:CreateToggle({Name="Auto Block", CurrentValue=true, Callback=function(val) autoBlockOn = val end})
CombatTab:CreateToggle({Name="Auto Punch", CurrentValue=true, Callback=function(val) autoPunchOn = val end})
CombatTab:CreateToggle({Name="Infinite Stamina", CurrentValue=true, Callback=function(val) infiniteStamina = val enableInfiniteStamina() end})
CombatTab:CreateInput({Name="Detection Range", PlaceholderText="10", RemoveTextAfterFocusLost=false, Callback=function(txt) detectionRange = tonumber(txt) or detectionRange end})

-- Misc: Copy Discord Invite
MiscTab:CreateButton({Name="Copy Discord Invite", Callback=function()
    pcall(function() setclipboard("https://discord.gg/baXMxMz5JZ") end)
end})

-- Auto Block
local soundHooks = {}

local function getSoundPosition(sound)
    if not sound then return nil end
    if sound.Parent and sound.Parent:IsA("BasePart") then
        return sound.Parent.Position
    end
    if sound.Parent and sound.Parent:IsA("Attachment") and sound.Parent.Parent and sound.Parent.Parent:IsA("BasePart") then
        return sound.Parent.Parent.Position
    end
    return nil
end

local function fireBlock()
    ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer("UseActorAbility","Block")
end

local function attemptBlock(sound)
    if not autoBlockOn then return end
    if not sound or not sound:IsA("Sound") or not sound.IsPlaying then return end
    local id = tostring(sound.SoundId):match("%d+")
    if not id or not autoBlockTriggerSounds[id] then return end
    local myRoot = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end
    local pos = getSoundPosition(sound)
    if pos and (myRoot.Position - pos).Magnitude <= detectionRange then
        fireBlock()
    end
end

local function hookSound(sound)
    if not sound or soundHooks[sound] then return end
    local conn1 = sound.Played:Connect(function() pcall(attemptBlock, sound) end)
    local conn2 = sound:GetPropertyChangedSignal("IsPlaying"):Connect(function()
        if sound.IsPlaying then pcall(attemptBlock, sound) end
    end)
    local conn3
    conn3 = sound.Destroying:Connect(function()
        if conn1 then conn1:Disconnect() end
        if conn2 then conn2:Disconnect() end
        if conn3 then conn3:Disconnect() end
        soundHooks[sound] = nil
    end)
    soundHooks[sound] = {conn1, conn2, conn3}
    if sound.IsPlaying then pcall(attemptBlock, sound) end
end

for _, desc in ipairs(game:GetDescendants()) do
    if desc:IsA("Sound") then
        pcall(hookSound, desc)
    end
end

game.DescendantAdded:Connect(function(desc)
    if desc:IsA("Sound") then
        pcall(hookSound, desc)
    end
end)

-- Auto Punch (Old System with charges.Text == "1")
local netRem = ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent")
local punchArgs = {"UseActorAbility","Punch"}
local charges = lp:WaitForChild("PlayerGui"):WaitForChild("MainUI"):WaitForChild("AbilityContainer"):WaitForChild("Punch"):WaitForChild("Charges")
local kFolder = Workspace:WaitForChild("Players"):WaitForChild("Killers")

local function firePunch()
    pcall(function() netRem:FireServer(unpack(punchArgs)) end)
end

local function closestKiller()
    local c = lp.Character
    local r = c and c:FindFirstChild("HumanoidRootPart")
    if not r then return nil end
    local target, distShortest = nil, math.huge
    for _, k in ipairs(kFolder:GetChildren()) do
        local kr = k:FindFirstChild("HumanoidRootPart")
        if kr then
            local dist = (kr.Position - r.Position).Magnitude
            if dist <= detectionRange and dist < distShortest then
                target = kr
                distShortest = dist
            end
        end
    end
    return target
end

RunService.RenderStepped:Connect(function()
    if not autoPunchOn then return end
    if tostring(charges.Text) ~= "1" then return end
    local target = closestKiller()
    if target then
        local r = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
        if r then
            r.CFrame = CFrame.new(r.Position, target.Position)
            firePunch()
        end
    end
end)
